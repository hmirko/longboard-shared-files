#!/usr/bin/env python

# http://wiki.ros.org/dynamic_reconfigure/Tutorials/HowToWriteYourFirstCfgFile

PACKAGE = "skateboard"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("motor_response_acc_a", double_t, 0, "Acceleration polynom parameter", 0.0, -0.005, 0.005)
gen.add("motor_response_acc_b", double_t, 0, "Acceleration polynom parameter", 0.0, -5.0, 5.0)
gen.add("motor_response_acc_c", double_t, 0, "Acceleration polynom parameter", 0, -1500.0, 1500.0)
gen.add("motor_response_brk_a", double_t, 0, "Break polynom parameter", 0.0, -0.005, 0.005)
gen.add("motor_response_brk_b", double_t, 0, "Break polynom parameter", 0.0, -5.0, 5.0)
gen.add("motor_response_brk_c", double_t, 0, "Break polynom parameter", 0.0, -1500.0, 1500.0)

gen.add("diff_window_size", int_t, 0, "size of the window for filtering the diff", 0, 0, 300)

gen.add("motor_full_throttle", int_t, 0, "weight for full throttle", 0, 0, 32000000)
gen.add("motor_full_break", int_t, 0, "weight for full break", 0, 0, 32000000)
gen.add("motor_gain", int_t, 0, "motor gain", 0, 0, 10)

mode_enum = gen.enum([ gen.const("calib",      int_t, 1, "calibration mode"),
                       gen.const("drive",      int_t, 2, "driving mode"),
                       gen.const("active",     int_t, 3, "active mode"),
                       gen.const("passive",    int_t, 4, "passive mode"),],
                     "Enum to describe the possible driving modes")

gen.add("mode", int_t, 0, "parameter to control the current state of the skateboard", 1, 1, 4, edit_method=mode_enum)

preset_enum = gen.enum([ gen.const("trivial",   int_t, 0, "no window, no response_curve"),
                         gen.const("window",    int_t, 1, "window, no response_curve"),
                         gen.const("response",  int_t, 2, "no window, response_curve"),
                         gen.const("both",      int_t, 3, "both"),],
                       "Enum to describe all parameter presets")

gen.add("preset", int_t, 0, "parameter to change to a predefined preset of parameters", 0, 0, 3, edit_method=preset_enum)

exit(gen.generate(PACKAGE, "skateboard", "reconfigure"))
