<?xml version='1.0' encoding='UTF-8'?>
<root version="2.3.0">
 <tabbed_widget name="Main Window" parent="main_window">
  <plotmatrix rows="1" columns="1" tab_name="Forces">
   <plot row="0" col="0">
    <range right="1027.493879" top="13798218.425000" bottom="-7730957.425000" left="1002.499913"/>
    <limitY/>
    <curve G="119" custom_transform="noTransform" name="/skateboard/Forces/back" B="180" R="31"/>
    <curve G="39" custom_transform="noTransform" name="/skateboard/Forces/diff" B="40" R="214"/>
    <curve G="201" custom_transform="noTransform" name="/skateboard/Forces/front" B="56" R="26"/>
    <transform value="noTransform"/>
   </plot>
  </plotmatrix>
  <plotmatrix rows="1" columns="1" tab_name="Gyro">
   <plot row="0" col="0">
    <range right="24.991758" top="145.790100" bottom="-124.977112" left="0.000000"/>
    <limitY/>
    <curve G="190" custom_transform="noTransform" name="/skateboard/Gyro/x" B="207" R="23"/>
    <curve G="189" custom_transform="noTransform" name="/skateboard/Gyro/y" B="34" R="188"/>
    <curve G="119" custom_transform="noTransform" name="/skateboard/Gyro/z" B="180" R="31"/>
    <transform value="noTransform"/>
   </plot>
  </plotmatrix>
  <plotmatrix rows="1" columns="1" tab_name="Acc">
   <plot row="0" col="0">
    <range right="25.013590" top="1.704340" bottom="-2.253412" left="0.021365"/>
    <limitY/>
    <curve G="127" custom_transform="noTransform" name="/skateboard/Acc/x" B="14" R="255"/>
    <curve G="76" custom_transform="noTransform" name="/skateboard/Acc/y" B="193" R="241"/>
    <curve G="103" custom_transform="noTransform" name="/skateboard/Acc/z" B="189" R="148"/>
    <transform value="noTransform"/>
   </plot>
  </plotmatrix>
  <plotmatrix rows="1" columns="1" tab_name="Window">
   <plot row="0" col="0">
    <range right="1027.494561" top="681.725000" bottom="-104.725000" left="1002.500675"/>
    <limitY/>
    <curve G="39" custom_transform="noTransform" name="/skateboard/Window/diff_scaled" B="40" R="214"/>
    <curve G="76" custom_transform="noTransform" name="/skateboard/Window/lower" B="193" R="241"/>
    <curve G="127" custom_transform="noTransform" name="/skateboard/Window/mid" B="14" R="255"/>
    <curve G="201" custom_transform="noTransform" name="/skateboard/Window/upper" B="56" R="26"/>
    <transform value="noTransform"/>
   </plot>
  </plotmatrix>
  <currentPlotMatrix index="3"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad_CSV">
   <default time_axis=""/>
  </plugin>
  <plugin ID="DataLoad_ROS_bags">
   <use_header_stamp value="false"/>
   <use_renaming_rules value="true"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
  </plugin>
  <plugin ID="DataLoad_ULog"/>
  <plugin ID="ROS_Topic_Streamer">
   <use_header_stamp value="false"/>
   <use_renaming_rules value="true"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
  </plugin>
  <plugin ID="RosoutPublisherROS" status="idle"/>
  <plugin ID="TopicPublisherROS" status="idle"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <previouslyLoaded_Streamer name="ROS_Topic_Streamer"/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets>
  <snippet name="1st_derivative">
   <global>var prevX = 0
var prevY = 0</global>
   <equation>dx = time - prevX
dy = value - prevY
prevX = time
prevY = value

return dy/dx</equation>
  </snippet>
  <snippet name="1st_order_lowpass">
   <global>var prevY = 0
var alpha = 0.1</global>
   <equation>prevY = alpha * value + (1.-alpha) * prevY

return prevY</equation>
  </snippet>
  <snippet name="front">
   <global></global>
   <equation>return value</equation>
  </snippet>
  <snippet name="sum_A_B">
   <global></global>
   <equation>return $$PLOT_A$$ + $$PLOT_B$$</equation>
  </snippet>
  <snippet name="yaw_from_quaternion">
   <global>// source: https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles

function quaternionToYaw(x, y, z, w)
{
  // yaw (z-axis rotation)
  t1 = 2.0 * (w * z + x * y);
  t2 = 1.0 - 2.0 * (y * y + z * z);
  yaw = Math.atan2(t1, t2);

  return yaw
}</global>
   <equation>return quaternionToYaw(x, y, z, w);</equation>
  </snippet>
 </snippets>
 <!-- - - - - - - - - - - - - - - -->
</root>

